Title: Update to v4

----

Intro: Learn how to upgrade a Kirby 3 project to Kirby 4.

----

Text:


<warning>
While we try to make sure that upgrading to Kirby 4 will be rather smooth for you, there are always things that can go wrong during such a process. Please **make a backup** of your site in any case.
</warning>

## Requirements

#### PHP
Kirby 4 now requires PHP 8.1+. Please check if your server supports this PHP version before upgrading.

#### Browser support of the Panel

The Panel in Kirby 4 supports the following modern browser versions:

<div class="table">
    <table>
        <tr>
            <th>Desktop</th>
            <th>Mobile</th>
        </tr>
        <tr>
            <td class="prose">
                <ul>
                    <li>Firefox 110+</li>
                    <li>Chrome 106+</li>
                    <li>Safari 15+</li>
                    <li>Edge 106+</li>
                    <li>Opera 94+</li>
                </ul>
            </td>
            <td class="prose">
                <ul>
                    <li>Mobile Safari 15+</li>
                    <li>Android Browser 117+</li>
                    <li>Chrome for Android 117+</li>
                </ul>
            </td>
        </tr>
    </table>
</div>

## For site developers

This guide highlights some key changes required when upgrading to Kirby 4. There might be further smaller breaking changes affecting your specific project. Please have a look at the (link: releases/4.0/#breaking-changes text: full list of breaking changes).

### License upgrade

Kirby 4 is a major release and requires a license upgrade. Licenses for Kirby 4+ (link: license/2023-11-28/summary text: include free feature updates for three years from the time of activation).

All Kirby 3 licenses not activated before Jan 1, 2023 can be upgraded to the new licensing model for free.

For everyone else, we offer an attractive upgrade price, no matter if you have a license for Kirby 1, Kirby 2 or Kirby 3.

You can perform the upgrade directly from the Kirby 4 Panel of your site or via our (link: https://hub.getkirby.com text: license hub).

### Compatible plugins

To see which of the plugins you use already support Kirby 4, have a look at this (link: plugins/v4 text: list of Kirby 4 compatible plugins).

### Core features replacing plugins

Kirby 4 contains some features out of the box that were previously provided by plugins. For some websites, this allows you to remove the plugin and rely solely on the native feature. Please check carefully whether the core function really covers the full scope of what your project needs. Otherwise, sticking with the plugin might still be necessary.

- (link: docs/reference/panel/fields/link text: Link field)
- (link: docs/reference/panel/fields/color text: Color field)
- (link: docs/guide/content/publishing-workflow#moving-pages text: Moving pages in the Panel)
- (link: docs/reference/panel/blueprints/file#optimize-uploaded-images text: Optimize images on upload)
- (link: docs/guide/files/files#setting-a-focus-point text: Setting an image focus point)
- (link: docs/reference/plugins/extensions/blocks#quick-and-easy-fields-preview text: Fields preview for blocks)
- (link: docs/reference/panel/blueprints/page#page-creation-dialog text: Custom fields in the page create dialog)
- (link: docs/reference/panel/sections/pages#filtering-pages__query text: Query support for pages and files sections)
- (link: docs/guide/languages/custom-language-variables#language-editor-in-the-panel text: Translate i18n strings in the Panel)
- (link: docs/reference/objects/image/qr-code text: Generate a QR code)

### PHP type hints

We have added a lot more (link: https://www.php.net/manual/en/language.types.declarations.php text: PHP type hints) throughout the system (e.g. for parameters, methods return types). This strictness really reduces the risk of errors in our PHP code. As a consequence, when extending core classes, e.g. in a custom page model, you will have to add some of these type hints to your code as well.

A common example for an error you might see with your v3 code in v4 is

```
Declaration of BlogPage::children() must be compatible with Kirby\Cms\Page::children(): Kirby\Cms\Pages
```

What this means is that you have a custom page `blog` model that overwrites the default `children()` method, e.g.

```php
class BlogPage extends Page
{
	public function children()
	{
		// ...
	}
```

What the error message is expressing is that it misses the return type for a `Pages` object, which we have added to the core. To fix the error message, you have to add this type hint to your code as well:

```php
use Kirby\Cms\Pages;

class BlogPage extends Page
{
	public function children(): Pages
	{
		// ...
	}
```

Depending on which parts of the core code you extend in your site, you might run into similar error messages. Have a close look at the error message, and it will tell you which part is affected, so that you can compare it with the core code and spot what type hints need to be added.

### Permissions of the almighty `kirby` user

```php
$kirby->impersonate('kirby')
```

In v3, the almighty `kirby` user wasn't that almighty but still restricted by the permissions of the admin role. In v4, it is truly almighty and not bound to any restrictions. Use where needed with caution.

### New core file method and reserved files field

Kirby 4 adds a new core file method: `$file->manipulate()`.  This means, that you can no longer use this method name for custom file methods. Also, the `focus` field name is now reserved by Kirby for file meta data. If you are using this field name in your file meta data or for custom file methods, please need to rename those files or methods.

## For plugin developers

### Panel: new look

The v4 Panel comes with a fresh look. Using core UI components in your plugins will help to automatically adapt your plugins to this new look. But we have also opened up (link: https://lab.getkirby.com/public/lab/basics/design text: our design system), so you can make use of it as we do.

### UI docs and lab

The Panel UI components have been a pain point in v3 as they were often undocumented and unstable. Kirby takes a big step here by introducing (link: https://lab.getkirby.com/public/lab/docs text: live Panel UI docs) as well as a (link: https://lab.getkirby.com/public/lab text: Lab with many examples) how to use the components. This has helped us mature our components and will allow us to handle breaking changes of UI components with the same caution as we have already treated them in the PHP backend.

When migrating from v3 to v4 with your plugins, you might encounter situations where previous usage of UI components broke. Please take a look at the Lab examples and feel free to reach out to the team to set them up for v4.

### New `panel` JavaScript API

We added a new Panel JavaScript API that gives you access to the most important Panel features: Control dialogs, drawers, notifications and more from your plugins, your custom panel.js or even the console. Explore (link: https://lab.getkirby.com/public/lab/internals/panel text: examples of the various interfaces) in the Lab.